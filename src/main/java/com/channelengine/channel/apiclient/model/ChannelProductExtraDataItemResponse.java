/*
 * ChannelEngine Channel API
 * ChannelEngine API for channels
 *
 * OpenAPI spec version: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.channelengine.channel.apiclient.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ChannelProductExtraDataItemResponse
 */

public class ChannelProductExtraDataItemResponse {
  @SerializedName("Key")
  private String key = null;

  @SerializedName("Value")
  private String value = null;

  /**
   * Type of the extra data field
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TEXT("TEXT"),
    
    NUMBER("NUMBER"),
    
    URL("URL"),
    
    IMAGEURL("IMAGEURL");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("IsPublic")
  private Boolean isPublic = null;

  public ChannelProductExtraDataItemResponse key(String key) {
    this.key = key;
    return this;
  }

   /**
   * Name of the extra data field
   * @return key
  **/
  @ApiModelProperty(value = "Name of the extra data field")
  public String getKey() {
    return key;
  }

  public void setKey(String key) {
    this.key = key;
  }

  public ChannelProductExtraDataItemResponse value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Value of the extra data field
   * @return value
  **/
  @ApiModelProperty(value = "Value of the extra data field")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public ChannelProductExtraDataItemResponse type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Type of the extra data field
   * @return type
  **/
  @ApiModelProperty(value = "Type of the extra data field")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public ChannelProductExtraDataItemResponse isPublic(Boolean isPublic) {
    this.isPublic = isPublic;
    return this;
  }

   /**
   * Add this field to the export of the product feed to the channel
   * @return isPublic
  **/
  @ApiModelProperty(value = "Add this field to the export of the product feed to the channel")
  public Boolean isIsPublic() {
    return isPublic;
  }

  public void setIsPublic(Boolean isPublic) {
    this.isPublic = isPublic;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelProductExtraDataItemResponse channelProductExtraDataItemResponse = (ChannelProductExtraDataItemResponse) o;
    return Objects.equals(this.key, channelProductExtraDataItemResponse.key) &&
        Objects.equals(this.value, channelProductExtraDataItemResponse.value) &&
        Objects.equals(this.type, channelProductExtraDataItemResponse.type) &&
        Objects.equals(this.isPublic, channelProductExtraDataItemResponse.isPublic);
  }

  @Override
  public int hashCode() {
    return Objects.hash(key, value, type, isPublic);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelProductExtraDataItemResponse {\n");
    
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isPublic: ").append(toIndentedString(isPublic)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

